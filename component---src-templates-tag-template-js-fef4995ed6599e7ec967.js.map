{"version":3,"sources":["webpack:///./src/templates/TagTemplate.js","webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js"],"names":["TagTemplate","props","tag","pageContext","data","allMarkdownRemark","totalCount","edges","Fragment","Consumer","theme","className","tagQuery","List","space","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to"],"mappings":"2FAAA,yHA+CeA,UArCK,SAAAC,GAAU,IAEXC,EAIbD,EAJFE,YAAeD,IAFU,EAMvBD,EAHFG,KACEC,kBAAqBC,EAJE,EAIFA,WAAYC,EAJV,EAIUA,MAIrC,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,eAAaC,SAAd,MACG,SAAAC,GAAK,OACJ,kBAAC,IAAD,CAASA,MAAOA,GACd,gCACE,kBAAC,IAAD,CAAUA,MAAOA,GACf,gDADF,IAC8B,kBAAC,IAAD,MAC3BR,GAEH,uBAAGS,UAAU,QACX,gCAASL,GADX,QACqCA,EAAa,EAAI,KAAO,IAD7D,YAGA,kBAAC,IAAD,CAAMC,MAAOA,EAAOG,MAAOA,SAMnC,kBAAC,IAAD,QAaC,IAAME,EAAQ,c,6ECFNC,EA5CF,SAAAZ,GAAU,IACbM,EAAiBN,EAAjBM,MAAOG,EAAUT,EAAVS,MAEf,OACE,kBAAC,IAAMF,SAAP,KACE,8DAoBcE,EAAMI,MAAMC,MAAMC,EACjBN,EAAMI,MAAME,EAIZN,EAAMI,MAAMG,GACVP,EAAMQ,KAAKC,KAAKC,EACdV,EAAMQ,KAAKG,WAAWC,OA1BtCf,EAAMgB,KAAI,SAAAC,GAAS,IAAD,EAMbA,EAJFC,KACiBC,EAHF,EAGbC,YAAeD,MACLE,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIE,IAAKF,EAAT,sCAUQlB,EAAMI,MAAMC,MAAMC,EACjBN,EAAMI,MAAME,EAIZN,EAAMI,MAAMG,GACVP,EAAMQ,KAAKC,KAAKC,EACdV,EAAMQ,KAAKG,WAAWC,OAhBjC,kBAAC,IAAD,CAAMS,GAAIH,GAAOF,QAZ3B,2FAqBgBhB,EAAMI,MAAMC,MAAMC,EArBlC,YAsBiBN,EAAMI,MAAME,EAtB7B,kEA0BiBN,EAAMI,MAAMG,GA1B7B,gBA2BmBP,EAAMQ,KAAKC,KAAKC,EA3BnC,gBA4BqBV,EAAMQ,KAAKG,WAAWC,EA5B3C,eAqBgBZ,EAAMI,MAAMC,MAAMC,EACjBN,EAAMI,MAAME,EAIZN,EAAMI,MAAMG,GACVP,EAAMQ,KAAKC,KAAKC,EACdV,EAAMQ,KAAKG,WAAWC,OCpC/C","file":"component---src-templates-tag-template-js-fef4995ed6599e7ec967.js","sourcesContent":["import { FaTag } from \"react-icons/fa/\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Seo from \"../components/Seo\";\r\nimport { ThemeContext } from \"../layouts\";\r\nimport Article from \"../components/Article\";\r\nimport Headline from \"../components/Article/Headline\";\r\nimport List from \"../components/List\";\r\n\r\nconst TagTemplate = props => {\r\n  const {\r\n    pageContext: { tag },\r\n    data: {\r\n      allMarkdownRemark: { totalCount, edges }\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <Article theme={theme}>\r\n            <header>\r\n              <Headline theme={theme}>\r\n                <span>Posts with tag</span> <FaTag />\r\n                {tag}\r\n              </Headline>\r\n              <p className=\"meta\">\r\n                <strong>{totalCount}</strong> post{totalCount > 1 ? \"s \" : \" \"} tagged:\r\n              </p>\r\n              <List edges={edges} theme={theme} />\r\n            </header>\r\n          </Article>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n\r\n      <Seo />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nTagTemplate.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TagTemplate;\r\n\r\n// eslint-disable-next-line no-undef\r\nexport const tagQuery = graphql`\r\n  query PostsByTag($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___prefix], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst List = props => {\r\n  const { edges, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul>\r\n        {edges.map(edge => {\r\n          const {\r\n            node: {\r\n              frontmatter: { title },\r\n              fields: { slug }\r\n            }\r\n          } = edge;\r\n\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={slug}>{title}</Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        ul {\r\n          margin: ${theme.space.stack.m};\r\n          padding: ${theme.space.m};\r\n          list-style: circle;\r\n        }\r\n        li {\r\n          padding: ${theme.space.xs} 0;\r\n          font-size: ${theme.font.size.s};\r\n          line-height: ${theme.font.lineHeight.l};\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  edges: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default List;\r\n","export { default } from \"./List\";\r\n"],"sourceRoot":""}