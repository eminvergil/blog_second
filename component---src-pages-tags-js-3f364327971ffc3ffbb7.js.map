{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js"],"names":["TagsPage","props","posts","data","edges","tagsPosts","forEach","edge","tags","node","frontmatter","tag","push","tagList","Fragment","theme","color","neutral","gray","j","brand","primary","title","map","item","key","pageTitle","query","List","space","stack","m","xs","font","size","s","lineHeight","l","slug","fields","to"],"mappings":"yOAuFeA,UA7EE,SAAAC,GAAU,IAGLC,EAEhBD,EAHFE,KACED,MAASE,MAKPC,EAAY,GAClBH,EAAMI,SAAQ,SAAAC,GAAS,IAIFC,EAEfD,EAHFE,KACEC,YAAeF,KAIfA,GAAgB,MAARA,GACVA,EAAKF,SAAQ,SAAAK,GACPA,GAAc,MAAPA,IACJN,EAAUM,KACbN,EAAUM,GAAO,IAEnBN,EAAUM,GAAKC,KAAKL,UAM5B,IAAMM,EAAU,GAEhB,IAAK,IAAIF,KAAON,EACdQ,EAAQD,KAAK,CAACD,EAAKN,EAAUM,KAG/B,OACE,kBAAC,IAAMG,SAAP,KACE,kBAAC,IAAD,CAASC,MAAOA,KACd,iEAeaA,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,aAxB5B,kBAAC,IAAD,CAAUC,MAAM,gBAAgBP,MAAOA,OAExCF,EAAQU,KAAI,SAAAC,GAAI,OACf,6BAASC,IAAKD,EAAK,GAAnB,qCAWWT,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,aApB1B,6DAUSN,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,aAnBxB,kBAAC,IAAD,MADF,IACaG,EAAK,IAElB,kBAAC,IAAD,CAAMpB,MAAOoB,EAAK,GAAIT,MAAOA,UATnC,0GAgBeA,IAAMC,MAAMC,QAAQC,KAAKC,EAhBxC,2DAqBiBJ,IAAMC,MAAMI,MAAMC,QArBnC,+DA0BcN,IAAMC,MAAMI,MAAMC,QA1BhC,eAgBeN,IAAMC,MAAMC,QAAQC,KAAKC,EAKvBJ,IAAMC,MAAMI,MAAMC,QAKrBN,IAAMC,MAAMI,MAAMC,YAKhC,kBAAC,IAAD,CAAKK,UAAU,WAYd,IAAMC,EAAK,a,6EC1CHC,EA5CF,SAAA3B,GAAU,IACbG,EAAiBH,EAAjBG,MAAOW,EAAUd,EAAVc,MAEf,OACE,kBAAC,IAAMD,SAAP,KACE,8DAoBcC,EAAMc,MAAMC,MAAMC,EACjBhB,EAAMc,MAAME,EAIZhB,EAAMc,MAAMG,GACVjB,EAAMkB,KAAKC,KAAKC,EACdpB,EAAMkB,KAAKG,WAAWC,OA1BtCjC,EAAMmB,KAAI,SAAAhB,GAAS,IAAD,EAMbA,EAJFE,KACiBa,EAHF,EAGbZ,YAAeY,MACLgB,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIb,IAAKa,EAAT,sCAUQvB,EAAMc,MAAMC,MAAMC,EACjBhB,EAAMc,MAAME,EAIZhB,EAAMc,MAAMG,GACVjB,EAAMkB,KAAKC,KAAKC,EACdpB,EAAMkB,KAAKG,WAAWC,OAhBjC,kBAAC,IAAD,CAAMG,GAAIF,GAAOhB,QAZ3B,2FAqBgBP,EAAMc,MAAMC,MAAMC,EArBlC,YAsBiBhB,EAAMc,MAAME,EAtB7B,kEA0BiBhB,EAAMc,MAAMG,GA1B7B,gBA2BmBjB,EAAMkB,KAAKC,KAAKC,EA3BnC,gBA4BqBpB,EAAMkB,KAAKG,WAAWC,EA5B3C,eAqBgBtB,EAAMc,MAAMC,MAAMC,EACjBhB,EAAMc,MAAME,EAIZhB,EAAMc,MAAMG,GACVjB,EAAMkB,KAAKC,KAAKC,EACdpB,EAAMkB,KAAKG,WAAWC,OCpC/C","file":"component---src-pages-tags-js-3f364327971ffc3ffbb7.js","sourcesContent":["import { FaTag } from \"react-icons/fa/\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport theme from \"../theme/theme.yaml\";\r\nimport Article from \"../components/Article/\";\r\nimport Headline from \"../components/Article/Headline\";\r\nimport List from \"../components/List\";\r\nimport Seo from \"../components/Seo\";\r\n\r\nconst TagsPage = props => {\r\n  const {\r\n    data: {\r\n      posts: { edges: posts }\r\n    }\r\n  } = props;\r\n\r\n  // Create tags list\r\n  const tagsPosts = {};\r\n  posts.forEach(edge => {\r\n    \r\n    const {\r\n      node: {\r\n        frontmatter: { tags }\r\n      }\r\n    } = edge;\r\n\r\n    if (tags && tags != null) {\r\n      tags.forEach(tag => {\r\n        if (tag && tag != null) {\r\n          if (!tagsPosts[tag]) {\r\n            tagsPosts[tag] = [];\r\n          }\r\n          tagsPosts[tag].push(edge);\r\n        }\r\n      })\r\n    }\r\n  });\r\n\r\n  const tagList = [];\r\n\r\n  for (var tag in tagsPosts) {\r\n    tagList.push([tag, tagsPosts[tag]]);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Article theme={theme}>\r\n        <header>\r\n          <Headline title=\"Posts by tags\" theme={theme} />\r\n        </header>\r\n        {tagList.map(item => (\r\n          <section key={item[0]}>\r\n            <h2>\r\n              <FaTag /> {item[0]}\r\n            </h2>\r\n            <List edges={item[1]} theme={theme} />\r\n          </section>\r\n        ))}\r\n        {/* --- STYLES --- */}\r\n        <style jsx>{`\r\n          h2 {\r\n            margin: 0 0 0.5em;\r\n            color: ${theme.color.neutral.gray.j};\r\n            \r\n          }\r\n          @from-width desktop {\r\n            :global(a:hover) {\r\n              color: ${theme.color.brand.primary};\r\n            }\r\n          }\r\n          h2 :global(svg) {\r\n            height: 0.8em;\r\n            fill: ${theme.color.brand.primary};\r\n          }\r\n        `}</style>\r\n      </Article>\r\n\r\n      <Seo pageTitle=\"Tags\"/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TagsPage;\r\n\r\n//eslint-disable-next-line no-undef\r\nexport const query = graphql`\r\n  query PostsQuery {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"//[0-9]+.*--/\" }\r\n      }\r\n      sort: { fields: [fields___prefix], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n            prefix\r\n          }\r\n          frontmatter {\r\n            title\r\n            tags\r\n            author\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst List = props => {\r\n  const { edges, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul>\r\n        {edges.map(edge => {\r\n          const {\r\n            node: {\r\n              frontmatter: { title },\r\n              fields: { slug }\r\n            }\r\n          } = edge;\r\n\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={slug}>{title}</Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        ul {\r\n          margin: ${theme.space.stack.m};\r\n          padding: ${theme.space.m};\r\n          list-style: circle;\r\n        }\r\n        li {\r\n          padding: ${theme.space.xs} 0;\r\n          font-size: ${theme.font.size.s};\r\n          line-height: ${theme.font.lineHeight.l};\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  edges: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default List;\r\n","export { default } from \"./List\";\r\n"],"sourceRoot":""}